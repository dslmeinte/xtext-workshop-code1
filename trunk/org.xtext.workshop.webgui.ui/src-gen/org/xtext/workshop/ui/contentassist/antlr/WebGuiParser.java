/*
* generated by Xtext
*/
package org.xtext.workshop.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.workshop.services.WebGuiGrammarAccess;

public class WebGuiParser extends AbstractContentAssistParser {
	
	@Inject
	private WebGuiGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.workshop.ui.contentassist.antlr.internal.InternalWebGuiParser createParser() {
		org.xtext.workshop.ui.contentassist.antlr.internal.InternalWebGuiParser result = new org.xtext.workshop.ui.contentassist.antlr.internal.InternalWebGuiParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getFeatureAccess().getMultivaluedAlternatives_3_0(), "rule__Feature__MultivaluedAlternatives_3_0");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getPageElementAccess().getAlternatives(), "rule__PageElement__Alternatives");
					put(grammarAccess.getSingleElementAccess().getAlternatives(), "rule__SingleElement__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getDomainModelAccess().getGroup(), "rule__DomainModel__Group__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getFeatureAccess().getGroup(), "rule__Feature__Group__0");
					put(grammarAccess.getDataTypeAccess().getGroup(), "rule__DataType__Group__0");
					put(grammarAccess.getWebModelAccess().getGroup(), "rule__WebModel__Group__0");
					put(grammarAccess.getPageAccess().getGroup(), "rule__Page__Group__0");
					put(grammarAccess.getActionElementAccess().getGroup(), "rule__ActionElement__Group__0");
					put(grammarAccess.getDisplayElementAccess().getGroup(), "rule__DisplayElement__Group__0");
					put(grammarAccess.getInputElementAccess().getGroup(), "rule__InputElement__Group__0");
					put(grammarAccess.getRepeatElementAccess().getGroup(), "rule__RepeatElement__Group__0");
					put(grammarAccess.getModelAccess().getNameAssignment_1(), "rule__Model__NameAssignment_1");
					put(grammarAccess.getModelAccess().getDomainAssignment_2(), "rule__Model__DomainAssignment_2");
					put(grammarAccess.getModelAccess().getWebAssignment_3(), "rule__Model__WebAssignment_3");
					put(grammarAccess.getDomainModelAccess().getEntitiesAssignment_2(), "rule__DomainModel__EntitiesAssignment_2");
					put(grammarAccess.getDomainModelAccess().getDataTypesAssignment_3(), "rule__DomainModel__DataTypesAssignment_3");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getFeaturesAssignment_3(), "rule__Entity__FeaturesAssignment_3");
					put(grammarAccess.getFeatureAccess().getNameAssignment_0(), "rule__Feature__NameAssignment_0");
					put(grammarAccess.getFeatureAccess().getTypeAssignment_2(), "rule__Feature__TypeAssignment_2");
					put(grammarAccess.getFeatureAccess().getMultivaluedAssignment_3(), "rule__Feature__MultivaluedAssignment_3");
					put(grammarAccess.getDataTypeAccess().getNameAssignment_1(), "rule__DataType__NameAssignment_1");
					put(grammarAccess.getWebModelAccess().getPagesAssignment_2(), "rule__WebModel__PagesAssignment_2");
					put(grammarAccess.getPageAccess().getNameAssignment_1(), "rule__Page__NameAssignment_1");
					put(grammarAccess.getPageAccess().getTitleAssignment_5(), "rule__Page__TitleAssignment_5");
					put(grammarAccess.getPageAccess().getEntityAssignment_7(), "rule__Page__EntityAssignment_7");
					put(grammarAccess.getPageAccess().getContentsAssignment_9(), "rule__Page__ContentsAssignment_9");
					put(grammarAccess.getActionElementAccess().getNameAssignment_1(), "rule__ActionElement__NameAssignment_1");
					put(grammarAccess.getDisplayElementAccess().getReferenceAssignment_1(), "rule__DisplayElement__ReferenceAssignment_1");
					put(grammarAccess.getInputElementAccess().getReferenceAssignment_1(), "rule__InputElement__ReferenceAssignment_1");
					put(grammarAccess.getRepeatElementAccess().getReferenceAssignment_1(), "rule__RepeatElement__ReferenceAssignment_1");
					put(grammarAccess.getRepeatElementAccess().getContentsAssignment_3(), "rule__RepeatElement__ContentsAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.workshop.ui.contentassist.antlr.internal.InternalWebGuiParser typedParser = (org.xtext.workshop.ui.contentassist.antlr.internal.InternalWebGuiParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public WebGuiGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(WebGuiGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
