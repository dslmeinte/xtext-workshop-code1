grammar org.xtext.workshop.WebGui with org.eclipse.xtext.common.Terminals

generate webGui "http://www.xtext.org/workshop/WebGui"


Model:
    'model' name=ID
        domain=DomainModel
        web=WebModel
    ;

/*
 * +--------------+
 * | Domain model |
 * +--------------+
 */

DomainModel:
    'domain:'
    	(types+=Type)+
    ;

Entity:
    'entity' name=ID 
    '{'
        (features+=Feature)*
    '}';

Feature:
    name=ID ':' type=[Type]
    	( multivalued ?= ( '(s)' | '(es)' ) )?
    	( '=' expression=Expression )?;

Type:
    Entity | DataType;

DataType:
    'type' name=ID;


/*
 * +-----------+
 * | Web model |
 * +-----------+
 */

WebModel:
    'web:'
    	(pages+=Page)+
    ;

Page:
    'page' name=ID
    '{'
        'title' '=' title=STRING
        'context' '=' entity=[Entity]
            (contents+=PageElement)*
    '}';
    // (initial) scope for PageElement-s: features of referenced Entity

PageElement:
    ActionElement | DisplayElement;

ActionElement:	// ~ link
    'action' name=ID;

DisplayElement:	// ~ display field
    'show' reference=DomainPath;

DomainPath:
    feature=[Feature]  (tail=DomainPathTail)?;
    // scope(feature)=features of Entity referenced by containing Page

DomainPathTail:
    '.' feature=[Feature] (tail=DomainPathTail)?;
    // scope(feature)=features of Entity referenced by container or empty

Expression:
    Addition;

Addition returns Expression:
    Multiplication ( ({Add.left=current} '+' | {Subtract.left=current} '-') right=Multiplication)*;

Multiplication returns Expression:
    Value ( ({Multiply.left=current} '*' | {Divide.left=current} '/') right=Value)*;

Value:
    NumberLiteral | DomainPath;

NumberLiteral:
    value=INT;

