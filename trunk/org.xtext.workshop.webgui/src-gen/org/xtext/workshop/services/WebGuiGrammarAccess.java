/*
* generated by Xtext
*/

package org.xtext.workshop.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class WebGuiGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDomainAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDomainDomainModelParserRuleCall_3_0 = (RuleCall)cDomainAssignment_3.eContents().get(0);
		private final Assignment cWebAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWebWebModelParserRuleCall_4_0 = (RuleCall)cWebAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Model:
		//	"model" name=ID "{" domain=DomainModel web=WebModel "}";
		public ParserRule getRule() { return rule; }

		//"model" name=ID "{" domain=DomainModel web=WebModel "}"
		public Group getGroup() { return cGroup; }

		//"model"
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//domain=DomainModel
		public Assignment getDomainAssignment_3() { return cDomainAssignment_3; }

		//DomainModel
		public RuleCall getDomainDomainModelParserRuleCall_3_0() { return cDomainDomainModelParserRuleCall_3_0; }

		//web=WebModel
		public Assignment getWebAssignment_4() { return cWebAssignment_4; }

		//WebModel
		public RuleCall getWebWebModelParserRuleCall_4_0() { return cWebWebModelParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDomainKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEntitiesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_3_0 = (RuleCall)cEntitiesAssignment_3.eContents().get(0);
		private final Assignment cDataTypesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDataTypesDataTypeParserRuleCall_4_0 = (RuleCall)cDataTypesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DomainModel:
		//	"domain" name=ID "{" entities+=Entity* dataTypes+=DataType* "}";
		public ParserRule getRule() { return rule; }

		//"domain" name=ID "{" entities+=Entity* dataTypes+=DataType* "}"
		public Group getGroup() { return cGroup; }

		//"domain"
		public Keyword getDomainKeyword_0() { return cDomainKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_3() { return cEntitiesAssignment_3; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_3_0() { return cEntitiesEntityParserRuleCall_3_0; }

		//dataTypes+=DataType*
		public Assignment getDataTypesAssignment_4() { return cDataTypesAssignment_4; }

		//DataType
		public RuleCall getDataTypesDataTypeParserRuleCall_4_0() { return cDataTypesDataTypeParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesFeatureParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Entity:
		//	"entity" name=ID "{" features+=Feature* "}";
		public ParserRule getRule() { return rule; }

		//"entity" name=ID "{" features+=Feature* "}"
		public Group getGroup() { return cGroup; }

		//"entity"
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//features+=Feature*
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }

		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_3_0() { return cFeaturesFeatureParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		private final Assignment cMultivaluedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cMultivaluedSKeyword_3_0 = (Keyword)cMultivaluedAssignment_3.eContents().get(0);
		
		//Feature:
		//	name=ID ":" type=[Type] multivalued?="(s)"?;
		public ParserRule getRule() { return rule; }

		//name=ID ":" type=[Type] multivalued?="(s)"?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//type=[Type]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_2_0_1() { return cTypeTypeIDTerminalRuleCall_2_0_1; }

		//multivalued?="(s)"?
		public Assignment getMultivaluedAssignment_3() { return cMultivaluedAssignment_3; }

		//"(s)"
		public Keyword getMultivaluedSKeyword_3_0() { return cMultivaluedSKeyword_3_0; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDataTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Type:
		//	Entity | DataType;
		public ParserRule getRule() { return rule; }

		//Entity | DataType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Entity
		public RuleCall getEntityParserRuleCall_0() { return cEntityParserRuleCall_0; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_1() { return cDataTypeParserRuleCall_1; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DataType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//DataType:
		//	"type" name=ID;
		public ParserRule getRule() { return rule; }

		//"type" name=ID
		public Group getGroup() { return cGroup; }

		//"type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class WebModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WebModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWebKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPagesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPagesPageParserRuleCall_3_0 = (RuleCall)cPagesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//WebModel:
		//	"web" name=ID "{" pages+=Page* "}";
		public ParserRule getRule() { return rule; }

		//"web" name=ID "{" pages+=Page* "}"
		public Group getGroup() { return cGroup; }

		//"web"
		public Keyword getWebKeyword_0() { return cWebKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//pages+=Page*
		public Assignment getPagesAssignment_3() { return cPagesAssignment_3; }

		//Page
		public RuleCall getPagesPageParserRuleCall_3_0() { return cPagesPageParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class PageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Page");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTitleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTitleSTRINGTerminalRuleCall_5_0 = (RuleCall)cTitleAssignment_5.eContents().get(0);
		private final Keyword cContentForKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEntityAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cEntityEntityCrossReference_7_0 = (CrossReference)cEntityAssignment_7.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_7_0_1 = (RuleCall)cEntityEntityCrossReference_7_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cContentsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cContentsPageElementParserRuleCall_9_0 = (RuleCall)cContentsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Page:
		//	"page" name=ID "{" "title" "=" title=STRING "content for" entity=[Entity] "{" contents+=PageElement* "}" "}";
		public ParserRule getRule() { return rule; }

		//"page" name=ID "{" "title" "=" title=STRING "content for" entity=[Entity] "{" contents+=PageElement* "}" "}"
		public Group getGroup() { return cGroup; }

		//"page"
		public Keyword getPageKeyword_0() { return cPageKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"title"
		public Keyword getTitleKeyword_3() { return cTitleKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//title=STRING
		public Assignment getTitleAssignment_5() { return cTitleAssignment_5; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_5_0() { return cTitleSTRINGTerminalRuleCall_5_0; }

		//"content for"
		public Keyword getContentForKeyword_6() { return cContentForKeyword_6; }

		//entity=[Entity]
		public Assignment getEntityAssignment_7() { return cEntityAssignment_7; }

		//[Entity]
		public CrossReference getEntityEntityCrossReference_7_0() { return cEntityEntityCrossReference_7_0; }

		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_7_0_1() { return cEntityEntityIDTerminalRuleCall_7_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//contents+=PageElement*
		public Assignment getContentsAssignment_9() { return cContentsAssignment_9; }

		//PageElement
		public RuleCall getContentsPageElementParserRuleCall_9_0() { return cContentsPageElementParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class PageElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PageElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSingleElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRepeatElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//PageElement:
		//	SingleElement | RepeatElement;
		public ParserRule getRule() { return rule; }

		//SingleElement | RepeatElement
		public Alternatives getAlternatives() { return cAlternatives; }

		//SingleElement
		public RuleCall getSingleElementParserRuleCall_0() { return cSingleElementParserRuleCall_0; }

		//RepeatElement
		public RuleCall getRepeatElementParserRuleCall_1() { return cRepeatElementParserRuleCall_1; }
	}

	public class SingleElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SingleElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDisplayElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cInputElementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//SingleElement:
		//	ActionElement | DisplayElement | InputElement;
		public ParserRule getRule() { return rule; }

		//ActionElement | DisplayElement | InputElement
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActionElement
		public RuleCall getActionElementParserRuleCall_0() { return cActionElementParserRuleCall_0; }

		//DisplayElement
		public RuleCall getDisplayElementParserRuleCall_1() { return cDisplayElementParserRuleCall_1; }

		//InputElement
		public RuleCall getInputElementParserRuleCall_2() { return cInputElementParserRuleCall_2; }
	}

	public class ActionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//ActionElement:
		//	"action" name=ID;
		public ParserRule getRule() { return rule; }

		//"action" name=ID
		public Group getGroup() { return cGroup; }

		//"action"
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class DisplayElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DisplayElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShowKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceFeatureCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cReferenceFeatureCrossReference_1_0.eContents().get(1);
		
		//DisplayElement:
		//	"show" reference=[Feature];
		public ParserRule getRule() { return rule; }

		//"show" reference=[Feature]
		public Group getGroup() { return cGroup; }

		//"show"
		public Keyword getShowKeyword_0() { return cShowKeyword_0; }

		//reference=[Feature]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }

		//[Feature]
		public CrossReference getReferenceFeatureCrossReference_1_0() { return cReferenceFeatureCrossReference_1_0; }

		//ID
		public RuleCall getReferenceFeatureIDTerminalRuleCall_1_0_1() { return cReferenceFeatureIDTerminalRuleCall_1_0_1; }
	}

	public class InputElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InputElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInputForKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceFeatureCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cReferenceFeatureCrossReference_1_0.eContents().get(1);
		
		//InputElement:
		//	"input for" reference=[Feature];
		public ParserRule getRule() { return rule; }

		//"input for" reference=[Feature]
		public Group getGroup() { return cGroup; }

		//"input for"
		public Keyword getInputForKeyword_0() { return cInputForKeyword_0; }

		//reference=[Feature]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }

		//[Feature]
		public CrossReference getReferenceFeatureCrossReference_1_0() { return cReferenceFeatureCrossReference_1_0; }

		//ID
		public RuleCall getReferenceFeatureIDTerminalRuleCall_1_0_1() { return cReferenceFeatureIDTerminalRuleCall_1_0_1; }
	}

	public class RepeatElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RepeatElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRepeatForKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cReferenceFeatureCrossReference_1_0 = (CrossReference)cReferenceAssignment_1.eContents().get(0);
		private final RuleCall cReferenceFeatureIDTerminalRuleCall_1_0_1 = (RuleCall)cReferenceFeatureCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContentsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContentsSingleElementParserRuleCall_3_0 = (RuleCall)cContentsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// *  
		//DomainPath:
		//    head=DomainPathHead;
		//    
		//DomainPathHead:
		//    reference=[Feature]  tail=DomainPathTail;
		//    
		//DomainPathTail:
		//    '.' reference=[Feature] (tail=DomainPathTail)?;
		// * /RepeatElement:
		//	"repeat for" reference=[Feature] "{" contents+=SingleElement* "}";
		public ParserRule getRule() { return rule; }

		//"repeat for" reference=[Feature] "{" contents+=SingleElement* "}" / *  
		//DomainPath:
		//    head=DomainPathHead;
		//    
		//DomainPathHead:
		//    reference=[Feature]  tail=DomainPathTail;
		//    
		//DomainPathTail:
		//    '.' reference=[Feature] (tail=DomainPathTail)?;
		// * /
		public Group getGroup() { return cGroup; }

		//"repeat for"
		public Keyword getRepeatForKeyword_0() { return cRepeatForKeyword_0; }

		//reference=[Feature]
		public Assignment getReferenceAssignment_1() { return cReferenceAssignment_1; }

		//[Feature]
		public CrossReference getReferenceFeatureCrossReference_1_0() { return cReferenceFeatureCrossReference_1_0; }

		//ID
		public RuleCall getReferenceFeatureIDTerminalRuleCall_1_0_1() { return cReferenceFeatureIDTerminalRuleCall_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//contents+=SingleElement*
		public Assignment getContentsAssignment_3() { return cContentsAssignment_3; }

		//SingleElement
		public RuleCall getContentsSingleElementParserRuleCall_3_0() { return cContentsSingleElementParserRuleCall_3_0; }

		/// *  
		//DomainPath:
		//    head=DomainPathHead;
		//    
		//DomainPathHead:
		//    reference=[Feature]  tail=DomainPathTail;
		//    
		//DomainPathTail:
		//    '.' reference=[Feature] (tail=DomainPathTail)?;
		// * /"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private ModelElements pModel;
	private DomainModelElements pDomainModel;
	private EntityElements pEntity;
	private FeatureElements pFeature;
	private TypeElements pType;
	private DataTypeElements pDataType;
	private WebModelElements pWebModel;
	private PageElements pPage;
	private PageElementElements pPageElement;
	private SingleElementElements pSingleElement;
	private ActionElementElements pActionElement;
	private DisplayElementElements pDisplayElement;
	private InputElementElements pInputElement;
	private RepeatElementElements pRepeatElement;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public WebGuiGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	"model" name=ID "{" domain=DomainModel web=WebModel "}";
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//DomainModel:
	//	"domain" name=ID "{" entities+=Entity* dataTypes+=DataType* "}";
	public DomainModelElements getDomainModelAccess() {
		return (pDomainModel != null) ? pDomainModel : (pDomainModel = new DomainModelElements());
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}

	//Entity:
	//	"entity" name=ID "{" features+=Feature* "}";
	public EntityElements getEntityAccess() {
		return (pEntity != null) ? pEntity : (pEntity = new EntityElements());
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Feature:
	//	name=ID ":" type=[Type] multivalued?="(s)"?;
	public FeatureElements getFeatureAccess() {
		return (pFeature != null) ? pFeature : (pFeature = new FeatureElements());
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}

	//Type:
	//	Entity | DataType;
	public TypeElements getTypeAccess() {
		return (pType != null) ? pType : (pType = new TypeElements());
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//DataType:
	//	"type" name=ID;
	public DataTypeElements getDataTypeAccess() {
		return (pDataType != null) ? pDataType : (pDataType = new DataTypeElements());
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//WebModel:
	//	"web" name=ID "{" pages+=Page* "}";
	public WebModelElements getWebModelAccess() {
		return (pWebModel != null) ? pWebModel : (pWebModel = new WebModelElements());
	}
	
	public ParserRule getWebModelRule() {
		return getWebModelAccess().getRule();
	}

	//Page:
	//	"page" name=ID "{" "title" "=" title=STRING "content for" entity=[Entity] "{" contents+=PageElement* "}" "}";
	public PageElements getPageAccess() {
		return (pPage != null) ? pPage : (pPage = new PageElements());
	}
	
	public ParserRule getPageRule() {
		return getPageAccess().getRule();
	}

	//PageElement:
	//	SingleElement | RepeatElement;
	public PageElementElements getPageElementAccess() {
		return (pPageElement != null) ? pPageElement : (pPageElement = new PageElementElements());
	}
	
	public ParserRule getPageElementRule() {
		return getPageElementAccess().getRule();
	}

	//SingleElement:
	//	ActionElement | DisplayElement | InputElement;
	public SingleElementElements getSingleElementAccess() {
		return (pSingleElement != null) ? pSingleElement : (pSingleElement = new SingleElementElements());
	}
	
	public ParserRule getSingleElementRule() {
		return getSingleElementAccess().getRule();
	}

	//ActionElement:
	//	"action" name=ID;
	public ActionElementElements getActionElementAccess() {
		return (pActionElement != null) ? pActionElement : (pActionElement = new ActionElementElements());
	}
	
	public ParserRule getActionElementRule() {
		return getActionElementAccess().getRule();
	}

	//DisplayElement:
	//	"show" reference=[Feature];
	public DisplayElementElements getDisplayElementAccess() {
		return (pDisplayElement != null) ? pDisplayElement : (pDisplayElement = new DisplayElementElements());
	}
	
	public ParserRule getDisplayElementRule() {
		return getDisplayElementAccess().getRule();
	}

	//InputElement:
	//	"input for" reference=[Feature];
	public InputElementElements getInputElementAccess() {
		return (pInputElement != null) ? pInputElement : (pInputElement = new InputElementElements());
	}
	
	public ParserRule getInputElementRule() {
		return getInputElementAccess().getRule();
	}

	/// *  
	//DomainPath:
	//    head=DomainPathHead;
	//    
	//DomainPathHead:
	//    reference=[Feature]  tail=DomainPathTail;
	//    
	//DomainPathTail:
	//    '.' reference=[Feature] (tail=DomainPathTail)?;
	// * /RepeatElement:
	//	"repeat for" reference=[Feature] "{" contents+=SingleElement* "}";
	public RepeatElementElements getRepeatElementAccess() {
		return (pRepeatElement != null) ? pRepeatElement : (pRepeatElement = new RepeatElementElements());
	}
	
	public ParserRule getRepeatElementRule() {
		return getRepeatElementAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
